{% set schema = base_schema + route.schema_suffix %}
{% if route.is_all %}
def {{ route.name }}(
        {% for field_name, field in metadata.model.fields.items() %}
        filter_{{field_name}}: Optional[{{field.python_type_str}}] = None,
        {% endfor %}
        sort_by: Optional[str] = None, is_desc: bool = False,
        db=Depends(get_db)) -> Page[{{ schema }}]:
    query = db.query({{ name }})
    {% for field_name, field in metadata.model.fields.items() %}
    if filter_{{field_name}} is not None:
        query = query.filter({{ name }}.{{field_name}} == filter_{{field_name}})
    {% endfor %}
    if sort_by is not None:
        if is_desc:
            query = query.order_by(getattr({{ name }}, sort_by).desc())
        else:
            query = query.order_by(getattr({{ name }}, sort_by))
    return paginate(query())

{% elif just_one_pk %}
def {{ route.name }}(ident: {{ pk_type }}, db=Depends(get_db)) -> {{ schema }}:
    obj = db.get({{ name }}, ident)
    if not obj:
        raise HTTPException(status_code=status.HTTP_404_NOT_FOUND, detail="Object not found")
    return obj

{% endif %}