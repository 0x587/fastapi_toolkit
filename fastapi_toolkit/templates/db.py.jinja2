from sqlalchemy.ext.asyncio import create_async_engine, AsyncSession, async_sessionmaker, AsyncAttrs
from sqlalchemy.orm import DeclarativeBase

from .setting import get_settings

setting = get_settings()
user = setting.user
password = setting.password
db_name = setting.database
host = setting.host

async_engine = create_async_engine(f"postgresql+asyncpg://{user}:{password}@{host}/{db_name}", future=True)


async def get_db() -> AsyncSession:
    async_session = async_sessionmaker(
        async_engine, class_=AsyncSession, expire_on_commit=False
    )
    async with async_session() as session:
        yield session


class Base(AsyncAttrs, DeclarativeBase):
    pass
